const mongoose = require("mongoose");
const Schema = mongoose.Schema;

const orderSchema = new Schema({
  orderID: { type: String, required: true },
  orderDate: { type: Date, required: true },
  orderDetailes: {
    mktplOrderId: { type: String, required: true },
    marketplaceName: { type: String, required: true },
    mktplSellerId: { type: String, required: true },
    sellerName: { type: String },
    type: "orderData",
    status: { type: String },
    orderApprovalDate: { type: String },
    orderCreationDate: { type: String, required: true },
  },
  orderCancelationReason: { type: String },
  orderCancelationDate: { type: Date },
  invoiceGenreated: { type: Boolean },
  paymentMode: { type: String },
  buyerDetails: {
    name: { type: String },
    address1: { type: String },
    address2: { type: String },
    city: { type: String },
    pincode: { type: Number },
    state: { type: String },
    GSTNumber: { type: Number },
    panNumber: { type: Number },
  },
  sellerDetails: {
    name: { type: String },
    address1: { type: String },
    address2: { type: String },
    city: { type: String },
    pincode: { type: Number },
    state: { type: String },
    GSTNumber: { type: Number },
    panNumber: { type: Number },
  },

  productsDetails: {
    mktplOrderId: { type: String },
    orderSkuId: { type: String },
    orderItemId: { type: String },
    orderFsnId: { type: String },
    orderHsnCode: { type: String },
    orderQuantity: { type: Number },
    productAmtCharged: { type: Number },
    shippingAmtCharged: { type: Number },
    totalAmtCharged: { type: Number },
    taxAmt: {
      sgst: { type: Number },
      cgst: { type: Number },
      igst: { type: Number },
      totalTax: { type: Number },
    },
  },
  totalProductAmtCharged: { type: Number },
  totalShippingAmtCharged: { type: Number },
  grandTotalAmtCharged: { type: Number },
  taxAmt: {
    sgst: { type: Number },
    cgst: { type: Number },
    igst: { type: Number },
    totalTax: { type: Number },
  },
  shippingData: {
    shipmentReady: { type: Boolean },
    shipmentStatus: { type: String },
    mktplOrderIds: [{ type: String }],
    shipmentDate: { type: Date },
    address1: { type: String },
    address2: { type: String },
    city: { type: String },
    pincode: { type: Number },
    state: { type: String },
    marketplaceName: { type: String },
    mktplSellerId: { type: String },
    type: { type: String },
    orderStatus: { type: String },
    buyerDetails: { type: Object },
    mktplShipmentId: { type: String },
    shipmentMode: { type: String },
    paymentMode: { type: String },
    numberOfProductsOrdered: { type: Number },
    productsDetails: { type: Object },
    orderPickupDate: { type: Date },
    mktplTrackingId: { type: String },
    logisticsPartner: { type: String },
    orderDeliveredDate: { type: Date },
    waybillNumber: { type: Number },
    totalSKU: { type: Number },
  },
  paymentStatus: { type: String },
  returnStatus: { type: String },
  returnFeedback: { type: String },
  invoiceDate: { type: Date },
  createdOn: { type: Date },
});

module.exports = mongoose.model("Order", orderSchema);
